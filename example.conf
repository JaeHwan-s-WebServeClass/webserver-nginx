server {
	listen 80;
	listen [::]:80;

	return 301 http://www.example.com;
}

server {
	listen			80; // host:port 의 첫 번째 서버가 이 host:port 의 기본값이 된다.
	server_name		example.com www.example.com; // server_names 을 설정할지 여부를 결정한다.

	error_page				404 /404.html; // 404 오류가 발생하면 404.html을 반환
	client_max_body_size	10m; //클라이언트 본문 크기를 제한한다.

	# index 파일들의 우선순위 설정
	# index 파일은 웹서버가 디렉토리 경로를 요청받았을 때, 해당 디렉토리 내에서 기본적으로 보여줄 파일을 지정하는 설정
	# 예를 들어, 사용자가 "http://example.com/"를 요청할 때, 서버는 "http://example.com/index.html" 파일을 찾아서 해당 파일을 반환
	# index index.html index.htm index.nginx-debian.html index.php;
	
	root /rootdir/

	location /example {
		root /test/;	// /example/helloworld 를 요청할 경우 /rootdir/test/helloworld로 루팅
	
		autoindex on;	// 디렉토리 목록 on
		# autoindex : 디렉토리에서 인덱스 파일을 찾지 못할 경우, 해당 디렉토리의 파일 목록을 자동으로 생성하여 보여줌

		index index.html index.htm index.nginx-debian.html index.php;

		allow GET POST;
		deny DELETE;
		# deny all;
	}

	location /redirection_example {
		return 301 http://www.example.com;
	}
}


# CGI 부분 conf 내용

	# # PHP 파일 요청에 대한 처리 설정
	# # 요청된 URL이 .php로 끝나는 경우 이 블록안의 설정을 적용
	# location ~ \.php$ {
	# 	# 요청된 파일이 존재하지 않으면 404 에러 반환
	# 	try_files $uri =404;

	# 	# FastCGI 설정
		
	# 	# FastCGI로 PHP를 처리하기 위해 요청된 URI에서 파일 경로와 파라미터 추출 
	# 	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	# 	# FastCGI 서버를 지정.
	# 	# wordpress:9000은 FastCGI 프로토콜로 9000번 포트에 실행되는 PHP-FPM 서버를 의미
	# 	fastcgi_pass wordpress:9000;
	# 	# PHP 파일이 요청된 경우 기본적으로 index.php 파일을 처리
	# 	fastcgi_index index.php;
	# 	# FastCGI 파라미터를 설정하는 파일을 포함
	# 	include fastcgi_params;
	# 	# FastCGI 파라미터 중 하나로, PHP 경로와 파일명을 지정
	# 	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	# 	# FastCGI 파라미터 중 하나고, 'fastcgi_split_path_info' 지시어에서 추출된 파일 경로 이외의 부가적인 정보를 전달
	# 	fastcgi_param PATH_INFO $fastcgi_path_info;
	# }
	# # PHP 파일이 요청된 경우,
	# # 1. Nginx가 FasgCGI 프로토콜을 사용하여 PHP-FPM 서버에 요청을 전달하고,
	# # 2. PHP-FPM 서버가 PHP 파일을 처리한 후,
	# # 3. 결과를 다시 Nginx에게 전달하여 웹 페이지를 반환
	# # 하는 과정을 담당
